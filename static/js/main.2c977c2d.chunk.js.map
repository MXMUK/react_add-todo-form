{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","setTitle","setName","titleInputError","setTitleInputError","userInputError","setUserInputError","allTodos","setAllTodos","action","method","onSubmit","event","preventDefault","newUserId","userName","neededUser","undefined","findUserId","currentTodos","todosArr","sort","todo1","todo2","htmlFor","type","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c977c2d.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { title, user, completed } = todo;\n\n  return (\n    <article\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { FC } from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nfunction getNewTodoId(todosArr: Todo[]) {\n  const sortedTodos = todosArr.sort((todo1, todo2) => todo2.id - todo1.id);\n\n  return sortedTodos[0].id + 1;\n}\n\nfunction findUserId(userName: string) {\n  const neededUser = usersFromServer.find(user => user.name === userName);\n\n  if (neededUser === undefined) {\n    return 0;\n  }\n\n  return neededUser.id;\n}\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [name, setName] = useState('Choose a user');\n  const [titleInputError, setTitleInputError] = useState(false);\n  const [userInputError, setUserInputError] = useState(false);\n  const [allTodos, setAllTodos] = useState(todos);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={event => {\n          event.preventDefault();\n\n          if (title === '') {\n            setTitleInputError(true);\n          }\n\n          if (name === 'Choose a user') {\n            setUserInputError(true);\n          }\n\n          const newUserId = findUserId(name);\n\n          setAllTodos(currentTodos => [\n            ...currentTodos,\n            {\n              id: getNewTodoId(currentTodos),\n              title,\n              completed: false,\n              userId: newUserId,\n              user: getUser(newUserId),\n            },\n          ]);\n        }}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            name=\"title\"\n            id=\"titleInput\"\n            value={title}\n            onChange={event => setTitle(event.target.value)}\n          />\n\n          {titleInputError\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userInput\">User: </label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"userInput\"\n            value={name}\n            onChange={event => setName(event.target.value)}\n          >\n            <option value={name} disabled>{name}</option>\n\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.name}>{user.name}</option>\n            ))}\n          </select>\n\n          {userInputError\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={allTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}